{"version":3,"file":"index.2650c1690da2034c.hot-update.js","sources":["/Users/VojtaTrainProgramming/Documents/IMKS/imks/src/App.tsx"],"sourcesContent":["import { MenuItem, Select, ThemeProvider } from \"@mui/material\";\nimport { imksTheme } from \"../theme/customeTheme\";\nimport { ImksChannels } from \"../components/channels/ImksChannels\";\nimport HeaderBarMenu from \"../components/headerMenu/HeaderBarMenu\";\nimport LightChart from \"../components/diagram/LightChart\";\nimport { useUpdateLineChart } from \"../hooks/sliderHooks\";\nimport WebSocketComponent from \"./websocket/webSocket\";\nimport { WebSocketProvider } from \"../contextAPI/webSocketContext\";\nimport { useState } from \"react\";\n\n//přidání nového posuvníku...má se přesunou v rámci pořadí ostaních posuvníků dle času?\n\n// umožnit editovat barvy\n\n// umožnit přidávání sliders ke všem kanálů viz   const lineChartData: LineChartIntensityData = {\n//   2: { color: cyan[500], legendTitle: \"Světlo\", series: [] },\n//   3: { color: \"#b6cf55\", legendTitle: \"Hnojení\", series: [] },\n// };\n\n// dodělat překlady\n\n//přidat návod\n\n//kouknout na efektivitu renderů\n\nconst books: Book[] = [\n  { id: 1, name: \"Harry Potter\" },\n  { id: 2, name: \"Děti z Bulerbinu\" },\n  { id: 3, name: \"Míšiny cesty\" },\n  { id: 4, name: \"Mikulášovi patálie \" },\n];\nfunction App() {\n  // const { datesData, intensitySeries } = useUpdateLineChart();\n  const [selectedId, setSelectedId] = useState<number | string>(1);\n\n  return (\n    <SelectField<Book>\n      items={books}\n      keyExtractor={(book) => book.id}\n      labelExtractor={(book) => book.name}\n      value={selectedId}\n      onChange={(value) => setSelectedId(value)}\n    />\n    // <ThemeProvider theme={imksTheme}>\n    //   <WebSocketProvider>\n    //     <WebSocketComponent />\n    //     <HeaderBarMenu />\n    //     <LightChart timeData={datesData} intensityData={intensitySeries} />\n    //     <ImksChannels />\n    //   </WebSocketProvider>\n    // </ThemeProvider>\n  );\n}\nexport default App;\n\ntype Book = {\n  id: number;\n  name: string;\n};\n\ntype SelectFieldProps<T> = {\n  items: T[];\n  keyExtractor: (item: T) => string | number;\n  labelExtractor: (item: T) => string;\n  value: string | number;\n  onChange: (value: string | number) => void;\n};\n\nconst SelectField = <T,>({\n  items,\n  keyExtractor,\n  labelExtractor,\n  value,\n  onChange,\n}: SelectFieldProps<T>) => {\n  return (\n    <Select value={value} onChange={(e) => onChange(e.target.value)}>\n      {items.map((item) => (\n        <MenuItem key={keyExtractor(item)} value={keyExtractor(item)}>\n          {labelExtractor(item)}\n        </MenuItem>\n      ))}\n    </Select>\n  );\n};\n"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA;AAQA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;;;;;AAWA;AArBA;AAAA;AAsBA;AAeA;AAAA;AAOA;AACA;AAAA;AACA;AACA;AACA;AADA;;;;;;;;;;AAMA;AAhBA"}